
#endif

#ifndef INTSTDCNOSTDCUNISTDSTDCH
/* Special case for , since it is non-ANSI. We include it way
 * down here because we want the user's section 1 to have been scanned first.
 * The user has a chance to override it with an option.
 */

#endif

#ifndef INTSTDCEXTRASTDCTYPE
STDCEXTRASTDCTYPE void *
#endif

/* Accessor methods to globals.
   These are made visible to non-reentrant scanners for convenience. */

int pprclexSTDCdestroy (void );

int pprcgetSTDCdebug (void );

void pprcsetSTDCdebug (int debugSTDCflag  );

INTSTDCEXTRASTDCTYPE pprcgetSTDCextra (void );

void pprcsetSTDCextra (INTSTDCEXTRASTDCTYPE userSTDCdefined  );

FILE *pprcgetSTDCin (void );

void pprcsetSTDCin  (FILE * inSTDCstr  );

FILE *pprcgetSTDCout (void );

void pprcsetSTDCout  (FILE * outSTDCstr  );

int pprcgetSTDCleng (void );

char *pprcgetSTDCtext (void );

int pprcgetSTDClineno (void );

void pprcsetSTDClineno (int lineSTDCnumber  );

/* Macros after this point can all be overridden by user definitions in
 * section 1.
 */

#ifndef INTSTDCSKIPSTDCYYWRAP
#ifdef STDCSTDCcplusplus
extern C int n (void );
#else
extern int n (void );
#endif
#endif

#ifndef pprctext
static void yySTDCflexSTDCstrncpy (char *,const char *,int );
#endif

#ifdef INTSTDCNEEDSTDCSTRLEN
static int yySTDCflexSTDCstrlen (const char * );
#endif

#ifndef INTSTDCNOSTDCINPUT

#endif

/* Amount of stuff to slurp up with each read. */
#ifndef INTSTDCREADSTDCBUFSTDCSIZE
#ifdef STDCSTDCia64STDCSTDC
/* On IA-64, the buffer size is 16k, not 8k */
STDCREADSTDCBUFSTDCSIZE 16384
#else
STDCREADSTDCBUFSTDCSIZE 8192
#endif /* STDCSTDCia64STDCSTDC */
#endif

/* Number of entries by which start-condition stack grows. */
#ifndef INTSTDCSTARTSTDCSTACKSTDCINCR
STDCSTARTSTDCSTACKSTDCINCR 25
#endif

/* Default declaration of generated scanner - a define so the user can
 * easily add parameters.
 */
#ifndef INTSTDCDECL
STDCDECLSTDCISSTDCOURS 1

extern int pprclex (void);

STDCDECL int pprclex (void)
#endif /* !INTSTDCDECL */

/* yySTDCgetSTDCpreviousSTDCstate - get the state just before the EOB char was reached */

#undef INTSTDCNEWSTDCFILE
#undef INTSTDCFLUSHSTDCBUFFER
#undef yySTDCsetSTDCbol
#undef yySTDCnewSTDCbuffer
#undef yySTDCsetSTDCinteractive
#undef INTSTDCDOSTDCBEFORESTDCACTION

#ifdef INTSTDCDECLSTDCISSTDCOURS
#undef INTSTDCDECLSTDCISSTDCOURS
#undef INTSTDCDECL
#endif

#line 45 


#line 334 
#undef HEADERSTDCHEADER
#endif /* HSTDCH */


/*--Definicion de variables-----------------------------------------------------------------------------------------------*/
FILE *file;
int tokenSTDCtype[105];
int tokenSTDCquantity[105];

char specialCommand[2];



/*--------------------------------------------Contiene todos los datos globales---------------------------------------*/
/*Representa el conjunto de tipos de tokens*/
typedef enum tokenSTDCtypes{
  PLUS, MUL, MINUS, IFSYS, ELSESYS, LPAREN, RPAREN, EQUAL, ASSIGN, CORCHL, CORCHR, SEMICOLON, ID, NUMBER, STRING, DOUBLEQUOTE, LESSMORE,
	WHILELOOP, FORLOOP, LEQ, GEQ,LESS,GREATER,COMMA,PERIOD,UNKNOWN,INCLUDE, DEFINE, FILENAME,QUOTES,LIBRARY,VALUE,
	CODIGO,SPACE,NEWLINE,VARIABLE, QUOTATION, TAB,CASE,CHAR,CONST,CONTINUE,DEFAULT, DO,DOUBLE,ENUM,EXTERN,FLOAT,GOTO,INT, LONG, REGISTER, RETURN,SHORT, BACKSLASH,
	SIGNED, SIZEOF, STATIC,STRUCT,SWITCH,TYPEDEF,UNION, UNSIGNED, VOID, VOLATILE, NOTEQUAL, ARROW, QUESTIONMARK, COLON, AND, OR, DIV, AUTO, BREAK, NOT,
	PLUSPLUS, MINUSMINUS, PLUSEQUAL, MINUSEQUAL, MULEQUAL, DIVEQUAL, MOD